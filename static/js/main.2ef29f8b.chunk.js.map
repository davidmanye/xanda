{"version":3,"sources":["magico.png","el-senor-don-gato.mp3","la-pegatina-gat-rumberu-con-letra.mp3","SKA-P-El Gato Lopez..mp3","components/DateCountdown.js","components/Square.js","components/Caesar.js","components/Song.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DateCountdown","props","state","final","moment","date","this","timerID","setInterval","tick","clearInterval","setState","duration","diff","day","days","hour","hours","minute","minutes","seconds","Container","className","Jumbotron","fluid","Row","xs","md","lg","Col","value","maxValue","text","React","Component","Square","handleChange","event","solution","target","validate","success","failed","setTimeout","history","push","Image","src","square","Alert","variant","show","dismissible","onClose","InputGroup","FormControl","onKeyPress","e","key","onChange","placeholder","Append","Button","onClick","Caesar","controls","autoPlay","song1","type","song2","song3","size","App","path","component","Song","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ef29f8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magico.a4d6c483.png\";","module.exports = __webpack_public_path__ + \"static/media/el-senor-don-gato.6161f535.mp3\";","module.exports = __webpack_public_path__ + \"static/media/la-pegatina-gat-rumberu-con-letra.831149f9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/SKA-P-El Gato Lopez..179b9640.mp3\";","import React from 'react';\nimport {CircularProgressbar} from 'react-circular-progressbar';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport {Image, Jumbotron} from 'react-bootstrap';\nimport 'react-circular-progressbar/dist/styles.css';\nimport moment from \"moment\";\n\nclass DateCountdown extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      final: new moment('2020-09-13T18:00:00'),\n      date: new moment()\n    };\n  }\n\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new moment()\n    });\n  }\n\n  render() {\n    const duration = moment.duration(this.state.final.diff(this.state.date))\n    const day = duration.days();\n    const hour = duration.hours();\n    const minute = duration.minutes();\n    const seconds = duration.seconds();\n    return <Container className=\"center\">\n      <Jumbotron fluid>\n        <p className=\"prim\">Lo bueno se hace esperar... sabrás cómo continuar cuando llegue el momento</p>\n      </Jumbotron>\n      <Row xs={4} md={8} lg={16}>\n        <Col>\n          <p className=\"timeHead\">Dias</p>\n          <CircularProgressbar value={day} maxValue={30} text={`${day}`}/>\n        </Col>\n        <Col>\n          <p className=\"timeHead\">Horas</p>\n          <CircularProgressbar value={hour} maxValue={24} text={`${hour}`}/>\n        </Col>\n        <Col>\n          <p className=\"timeHead\">Minutos</p>\n          <CircularProgressbar value={minute} maxValue={60} text={`${minute}`}/>\n        </Col>\n        <Col>\n          <p className=\"timeHead\">Segundos</p>\n          <CircularProgressbar value={seconds} maxValue={60} text={`${seconds}`}/>\n        </Col>\n      </Row>\n    </Container>\n  }\n}\n\nexport default DateCountdown;\n","import React from 'react';\nimport {InputGroup, FormControl, Button, Image, Alert, Row, Col} from 'react-bootstrap';\nimport square from '../magico.png'\n\nclass Square extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      solution: '',\n      failed: false,\n      success: false\n    }\n  }\n\n  render() {\n    return <div className=\"center\">\n      <Row className=\"m-auto\">\n        <Col><Image src={square} className='square' fluid/></Col>\n\n      </Row>\n      <Row className=\"m-auto\">\n        <Col>\n          <Alert variant='danger' show={this.state.failed} dismissible={true}\n                 onClose={() => this.setState({failed: false})}>\n            Prueba otra vez\n          </Alert>\n          <Alert variant='success' show={this.state.success}>\n            Correcto!\n          </Alert>\n          <InputGroup className=\"mb-3\">\n            <FormControl onKeyPress={(e) => {if (e.key == 'Enter') { this.validate()}}} onChange={this.handleChange} value={this.state.solution} placeholder=\"Solución\"/>\n            <InputGroup.Append>\n              <Button  onClick={this.validate}>Validar</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n      </Row>\n\n    </div>;\n  }\n\n  handleChange = (event) => {\n    this.setState({solution: event.target.value})\n  }\n\n  validate = () => {\n    if (this.state.solution === '13') {\n      this.setState({success: true, failed: false})\n      setTimeout(() => this.props.history.push('caesar'), 1000);\n    } else {\n      this.setState({failed: true})\n    }\n  }\n\n}\n\n\nexport default Square;\n","import React from 'react';\nimport {InputGroup, FormControl, Button, Alert, Row, Col, Jumbotron} from 'react-bootstrap';\n\nclass Caesar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      solution: '',\n      failed: false,\n      success: false\n    }\n  }\n\n  render() {\n    return <div className=\"center\">\n        <Col>\n          <Jumbotron fluid>\n            <p className=\"sec\">a \t&#x2192; n</p>\n            <p className=\"prim\">yrvin</p>\n          </Jumbotron>\n          <Row>\n            <Alert variant='danger' show={this.state.failed} dismissible={true}\n                   onClose={() => this.setState({failed: false})}>\n              Prueba otra vez\n            </Alert>\n            <Alert variant='success' show={this.state.success}>\n              Correcto!\n            </Alert>\n            <InputGroup className=\"mb-3\">\n              <FormControl onKeyPress={(e) => {if (e.key == 'Enter') { this.validate()}}} onChange={this.handleChange} value={this.state.solution} placeholder=\"Solución\"/>\n              <InputGroup.Append>\n                <Button  onClick={this.validate}>Validar</Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Row>\n        </Col>\n    </div>;\n  }\n\n  handleChange = (event) => {\n    this.setState({solution: event.target.value})\n  }\n\n  validate = () => {\n    if (this.state.solution === 'leiva') {\n      this.setState({success: true, failed: false})\n      setTimeout(() => this.props.history.push('song'), 1000);\n    } else {\n      this.setState({failed: true})\n    }\n  }\n}\n\nexport default Caesar;\n","import React from 'react';\nimport {InputGroup, FormControl, Button, Alert, Row, Col, Jumbotron} from 'react-bootstrap';\nimport song1 from '../el-senor-don-gato.mp3'\nimport song2 from '../la-pegatina-gat-rumberu-con-letra.mp3'\nimport song3 from '../SKA-P-El Gato Lopez..mp3'\n\nclass Caesar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      solution: '',\n      failed: false,\n      success: false\n    }\n  }\n\n  render() {\n    return <div className=\"center\">\n\n      <Col>\n        <Row>\n          <audio controls autoPlay>\n            <source src={song1} type=\"audio/mpeg\"/>\n          </audio>\n        </Row>\n        <Row>\n          <audio controls autoPlay>\n            <source src={song2} type=\"audio/mpeg\"/>\n          </audio>\n        </Row>\n        <Row>\n          <audio controls autoPlay>\n            <source src={song3} type=\"audio/mpeg\"/>\n          </audio>\n        </Row>\n        <Row>\n          <Jumbotron fluid>\n            <p className=\"prim\">La solución esta en una de las canciones</p>\n          </Jumbotron>\n        </Row>\n        <Row>\n          <Alert variant='danger' show={this.state.failed} dismissible={true}\n                 onClose={() => this.setState({failed: false})}>\n            Prueba otra vez\n          </Alert>\n          <Alert variant='success' show={this.state.success}>\n            Correcto!\n          </Alert>\n          <InputGroup className=\"mb-3\">\n            <FormControl onKeyPress={(e) => {if (e.key == 'Enter') { this.validate()}}}  onChange={this.handleChange} value={this.state.solution} placeholder=\"Solución\"/>\n            <InputGroup.Append>\n              <Button onClick={this.validate}>Validar</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Row>\n      </Col>\n    </div>;\n  }\n\n  handleChange = (event) => {\n    this.setState({solution: event.target.value})\n  }\n\n  validate = () => {\n    if (this.state.solution === 'lopes') {\n      this.setState({success: true, failed: false})\n      setTimeout(() => this.props.history.push('dateCountdown'), 1000);\n    } else {\n      this.setState({failed: true})\n    }\n  }\n}\n\nexport default Caesar;\n","import React from 'react';\nimport {InputGroup, FormControl, Button, Alert, Row, Col, Jumbotron} from 'react-bootstrap';\n\nclass Caesar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      solution: '',\n      failed: false,\n      success: false\n    }\n  }\n\n  render() {\n    return <div className=\"center\">\n      <Button onClick={this.validate} size=\"large\">Comenzar</Button>\n    </div>;\n  }\n\n  validate = () => {\n    this.props.history.push('/square')\n  }\n}\n\nexport default Caesar;\n","import React from 'react';\nimport DateCountdown from \"./components/DateCountdown\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Square from \"./components/Square\";\nimport Caesar from \"./components/Caesar\";\nimport Song from \"./components/Song\";\nimport Home from \"./components/Home\";\n\nclass App extends React.Component {\n  render() {\n    return <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route\n            path=\"/dateCountdown\"\n            component={DateCountdown}>\n          </Route>\n          <Route\n            path=\"/caesar\"\n            component={Caesar}>\n          </Route>\n          <Route\n            path=\"/song\"\n            component={Song}>\n          </Route>\n          <Route\n            path=\"/square\"\n            component={Square}>\n          </Route>\n          <Route\n            path=\"/\"\n            component={Home}>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}